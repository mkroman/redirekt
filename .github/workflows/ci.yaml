name: Continuous Integration

on:
  pull_request:
    branches:
    - main

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.rust }}-
    - name: Run Clippy check
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ github.token }}
        args: --all-features
    - uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
    - check
    strategy:
      matrix:
        rust: [stable, nightly]
        features:
        - []
        - [default]
        - [default, all-databases]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Cache build/dependency artifacts
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.rust }}-
    - name: Run build
      run: cargo build --no-default-features --features "{{ matrix.features | join ',' }}"
